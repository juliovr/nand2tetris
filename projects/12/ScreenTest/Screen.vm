function Screen.init 0
push constant 16384
pop static 0
push constant 0
not
pop static 1
push constant 0
return
function Screen.clearScreen 3
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push constant 16
lt
not
if-goto WHILE_END0
push constant 0
pop local 2
label WHILE_EXP1
push local 2
push constant 32
lt
not
if-goto WHILE_END1
push static 0
push local 1
push constant 512
call Math.multiply 2
add
push local 2
add
pop local 0
push local 0
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 1
push constant 0
return
function Screen.drawPixel 3
push static 0
push argument 1
push constant 32
call Math.multiply 2
add
push argument 0
push constant 16
call Math.divide 2
add
pop local 0
push argument 0
push constant 16
call Math.mod 2
call Math.twoRaisedTo 1
pop local 2
push local 0
call Memory.peek 1
pop local 1
push static 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push local 1
push local 2
or
call Memory.poke 2
pop temp 0
goto IF_END0
label IF_FALSE0
push local 0
push local 1
push local 2
not
and
call Memory.poke 2
pop temp 0
label IF_END0
push constant 0
return
function Screen.drawLine 7
push argument 2
push argument 0
sub
call Math.abs 1
pop local 0
push argument 3
push argument 1
sub
call Math.abs 1
pop local 1
push constant 0
pop local 2
push constant 0
pop local 3
push constant 0
pop local 4
label WHILE_EXP0
push local 3
push local 0
gt
not
push local 4
push local 1
gt
not
and
not
if-goto WHILE_END0
push argument 0
push argument 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push local 3
add
pop local 5
goto IF_END0
label IF_FALSE0
push argument 0
push local 3
sub
pop local 5
label IF_END0
push argument 1
push argument 3
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push local 4
add
pop local 6
goto IF_END1
label IF_FALSE1
push argument 1
push local 4
sub
pop local 6
label IF_END1
push local 5
push local 6
call Screen.drawPixel 2
pop temp 0
push local 2
push constant 0
lt
push local 1
push constant 0
eq
or
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 3
push constant 1
add
pop local 3
push local 2
push local 1
add
pop local 2
goto IF_END2
label IF_FALSE2
push local 4
push constant 1
add
pop local 4
push local 2
push local 0
sub
pop local 2
label IF_END2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawRectangle 1
push constant 0
pop local 0
label WHILE_EXP0
push argument 1
push local 0
add
push argument 3
gt
not
not
if-goto WHILE_END0
push argument 0
push argument 1
push local 0
add
push argument 2
push argument 1
push local 0
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 6
push argument 2
neg
pop local 0
label WHILE_EXP0
push local 0
push argument 2
gt
not
not
if-goto WHILE_END0
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
pop local 5
push argument 0
push local 5
sub
pop local 1
push argument 1
push local 0
add
pop local 2
push argument 0
push local 5
add
pop local 3
push local 2
pop local 4
push local 1
push local 2
push local 3
push local 4
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
